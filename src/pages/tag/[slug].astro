---
import TagDescriptions from "@data/global/tag-descriptions.json";
import BaseLayout from "@layouts/BaseLayout.astro";
import PostList from "@components/blog/PostList.astro";

export async function getStaticPaths() {
	const getPosts = await Astro.glob("../../data/blog-posts/*.md");

	const tagSet = new Set();

	getPosts.forEach((post) => {
		if (post.frontmatter.tags) {
			post.frontmatter.tags.map((category: String) => {
				tagSet.add(category);
			});
		}
	});

	const tagArray = [...tagSet];

	return tagArray.map((tag) => {
		const unsortedPosts = getPosts.filter((post) => {
			if (post.frontmatter.tags) {
				return post.frontmatter.tags.includes(tag);
			}
		});

		const posts = unsortedPosts.sort((a, b) => {
			return new Date(b.frontmatter.publishDate).valueOf() - new Date(a.frontmatter.publishDate).valueOf();
		});

		return {
			params: { slug: tag },
			props: {
				tag,
				posts,
			},
		};
	});
}

const { tag, posts } = Astro.props;
const title = `Tag: ${tag}`;
const description = TagDescriptions[tag] ? TagDescriptions[tag] : `A collection of ${tag}-related blog posts.`;
---

<BaseLayout title={title} description={description}>
	<div class="no-margin-last-element blog-post-header">
		<h1>{title}</h1>
		<h2 class="fontsize-h3">{description}</h2>
	</div>
	{posts.map((post) => <PostList data={post} />)}
</BaseLayout>

<style lang="scss">
	@import "../../styles/base/_variables.scss";

	.blog-post-header {
		align-items: center;
		display: flex;
		flex-direction: column;
		margin-bottom: 6rem;
		text-align: center;
	}

	h1 {
		text-align: center;
		text-transform: uppercase;
		margin-bottom: 3rem;

		@media screen and (min-width: $breakpoint-md) {
			box-shadow: inset 0 -0.5em 0 #868b9f;
			line-height: 1;
			padding-right: 1rem;
			padding-left: 1rem;
			width: max-content;
		}
	}
</style>
